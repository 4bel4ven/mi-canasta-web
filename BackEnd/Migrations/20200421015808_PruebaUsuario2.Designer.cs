// <auto-generated />
using System;
using MiCanasta.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MiCanasta.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200421015808_PruebaUsuario2")]
    partial class PruebaUsuario2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.Familia", b =>
                {
                    b.Property<int>("FamiliaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AceptaSolicitudes")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("FamiliaId");

                    b.ToTable("Familia");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.RolPerfil", b =>
                {
                    b.Property<int>("RolPerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PerfilId1")
                        .HasColumnType("int");

                    b.HasKey("RolPerfilId");

                    b.HasIndex("PerfilId1");

                    b.ToTable("RolPerfil");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.Tienda", b =>
                {
                    b.Property<int>("TiendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("HoraApertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraCierre")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Latitud")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Longitud")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TiendaId");

                    b.ToTable("Tienda");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.Usuario", b =>
                {
                    b.Property<int>("Dni")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Dni");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.UsuarioFamilia", b =>
                {
                    b.Property<int>("UsuarioFamiliaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int>("FamiliaId")
                        .HasColumnType("int");

                    b.Property<int>("RolPerfilId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioDni")
                        .HasColumnType("int");

                    b.HasKey("UsuarioFamiliaId");

                    b.HasIndex("FamiliaId");

                    b.HasIndex("RolPerfilId");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("UsuariosFamilias");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.UsuarioTienda", b =>
                {
                    b.Property<int>("UsuarioTiendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<int>("RolPerfilId")
                        .HasColumnType("int");

                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioDni")
                        .HasColumnType("int");

                    b.HasKey("UsuarioTiendaId");

                    b.HasIndex("RolPerfilId");

                    b.HasIndex("TiendaId");

                    b.HasIndex("UsuarioDni");

                    b.ToTable("UsuarioTiendas");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.RolPerfil", b =>
                {
                    b.HasOne("MiCanasta.MiCanasta.Model.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId1");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.UsuarioFamilia", b =>
                {
                    b.HasOne("MiCanasta.MiCanasta.Model.Familia", "Familia")
                        .WithMany("UsuarioFamilias")
                        .HasForeignKey("FamiliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiCanasta.MiCanasta.Model.RolPerfil", "RolPerfil")
                        .WithMany()
                        .HasForeignKey("RolPerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiCanasta.MiCanasta.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioDni");
                });

            modelBuilder.Entity("MiCanasta.MiCanasta.Model.UsuarioTienda", b =>
                {
                    b.HasOne("MiCanasta.MiCanasta.Model.RolPerfil", "RolPerfil")
                        .WithMany()
                        .HasForeignKey("RolPerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiCanasta.MiCanasta.Model.Tienda", "Tienda")
                        .WithMany("UsuarioTiendas")
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiCanasta.MiCanasta.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioDni");
                });
#pragma warning restore 612, 618
        }
    }
}
